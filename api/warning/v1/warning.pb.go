// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.9
// source: warning/v1/warning.proto

package v1

import (
	v1 "gitlab.ctyuncdn.cn/ias/proto/api/standard/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcFeatureVector_DataType int32

const (
	RpcFeatureVector_UNKNOWN RpcFeatureVector_DataType = 0
	RpcFeatureVector_INT8    RpcFeatureVector_DataType = 1
	RpcFeatureVector_INT16   RpcFeatureVector_DataType = 2
	RpcFeatureVector_FLOAT32 RpcFeatureVector_DataType = 3
	RpcFeatureVector_FLOAT64 RpcFeatureVector_DataType = 4
)

// Enum value maps for RpcFeatureVector_DataType.
var (
	RpcFeatureVector_DataType_name = map[int32]string{
		0: "UNKNOWN",
		1: "INT8",
		2: "INT16",
		3: "FLOAT32",
		4: "FLOAT64",
	}
	RpcFeatureVector_DataType_value = map[string]int32{
		"UNKNOWN": 0,
		"INT8":    1,
		"INT16":   2,
		"FLOAT32": 3,
		"FLOAT64": 4,
	}
)

func (x RpcFeatureVector_DataType) Enum() *RpcFeatureVector_DataType {
	p := new(RpcFeatureVector_DataType)
	*p = x
	return p
}

func (x RpcFeatureVector_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFeatureVector_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_warning_v1_warning_proto_enumTypes[0].Descriptor()
}

func (RpcFeatureVector_DataType) Type() protoreflect.EnumType {
	return &file_warning_v1_warning_proto_enumTypes[0]
}

func (x RpcFeatureVector_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFeatureVector_DataType.Descriptor instead.
func (RpcFeatureVector_DataType) EnumDescriptor() ([]byte, []int) {
	return file_warning_v1_warning_proto_rawDescGZIP(), []int{3, 0}
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp    int64           `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`     // Defines the current timestamp
	JobId        string          `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // Defines unique job
	Object       []*Object       `protobuf:"bytes,3,rep,name=object,proto3" json:"object,omitempty"`
	ImageUrl     string          `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	CameraId     int64           `protobuf:"varint,5,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	Width        int64           `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	Height       int64           `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	CameraSource string          `protobuf:"bytes,8,opt,name=camera_source,json=cameraSource,proto3" json:"camera_source,omitempty"`
	StreamObject []*RpcObject    `protobuf:"bytes,9,rep,name=stream_object,json=streamObject,proto3" json:"stream_object,omitempty"`
	ExtraData    []*RpcAttribute `protobuf:"bytes,10,rep,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	ObjectId     string          `protobuf:"bytes,11,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	AlgoOutput   *v1.AlgoOutput  `protobuf:"bytes,12,opt,name=algo_output,json=algoOutput,proto3" json:"algo_output,omitempty"`
	VideoUrl     string          `protobuf:"bytes,13,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_v1_warning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_warning_v1_warning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_warning_v1_warning_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Frame) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Frame) GetObject() []*Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *Frame) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Frame) GetCameraId() int64 {
	if x != nil {
		return x.CameraId
	}
	return 0
}

func (x *Frame) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Frame) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Frame) GetCameraSource() string {
	if x != nil {
		return x.CameraSource
	}
	return ""
}

func (x *Frame) GetStreamObject() []*RpcObject {
	if x != nil {
		return x.StreamObject
	}
	return nil
}

func (x *Frame) GetExtraData() []*RpcAttribute {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *Frame) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *Frame) GetAlgoOutput() *v1.AlgoOutput {
	if x != nil {
		return x.AlgoOutput
	}
	return nil
}

func (x *Frame) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Score float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	Box   []int32 `protobuf:"varint,3,rep,packed,name=box,proto3" json:"box,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_v1_warning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_warning_v1_warning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_warning_v1_warning_proto_rawDescGZIP(), []int{1}
}

func (x *Object) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Object) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Object) GetBox() []int32 {
	if x != nil {
		return x.Box
	}
	return nil
}

type RpcObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId      uint32              `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	TrackingId    string              `protobuf:"bytes,2,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	ObjectLabel   string              `protobuf:"bytes,3,opt,name=object_label,json=objectLabel,proto3" json:"object_label,omitempty"`       // Person, Vehicle, Face
	ObjectBox     *RpcRectangle       `protobuf:"bytes,4,opt,name=object_box,json=objectBox,proto3" json:"object_box,omitempty"`             // Box of object
	DetectConf    float32             `protobuf:"fixed32,5,opt,name=detect_conf,json=detectConf,proto3" json:"detect_conf,omitempty"`        // Confidence of detection
	TrackingConf  float32             `protobuf:"fixed32,6,opt,name=tracking_conf,json=trackingConf,proto3" json:"tracking_conf,omitempty"`  // Confidence of tracking
	Attribute     []*RpcAttribute     `protobuf:"bytes,7,rep,name=attribute,proto3" json:"attribute,omitempty"`                              // Multiple sets of attribute of object
	FeatureVector []*RpcFeatureVector `protobuf:"bytes,8,rep,name=feature_vector,json=featureVector,proto3" json:"feature_vector,omitempty"` // feature vector for face recognition
}

func (x *RpcObject) Reset() {
	*x = RpcObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_v1_warning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObject) ProtoMessage() {}

func (x *RpcObject) ProtoReflect() protoreflect.Message {
	mi := &file_warning_v1_warning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObject.ProtoReflect.Descriptor instead.
func (*RpcObject) Descriptor() ([]byte, []int) {
	return file_warning_v1_warning_proto_rawDescGZIP(), []int{2}
}

func (x *RpcObject) GetObjectId() uint32 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *RpcObject) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *RpcObject) GetObjectLabel() string {
	if x != nil {
		return x.ObjectLabel
	}
	return ""
}

func (x *RpcObject) GetObjectBox() *RpcRectangle {
	if x != nil {
		return x.ObjectBox
	}
	return nil
}

func (x *RpcObject) GetDetectConf() float32 {
	if x != nil {
		return x.DetectConf
	}
	return 0
}

func (x *RpcObject) GetTrackingConf() float32 {
	if x != nil {
		return x.TrackingConf
	}
	return 0
}

func (x *RpcObject) GetAttribute() []*RpcAttribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *RpcObject) GetFeatureVector() []*RpcFeatureVector {
	if x != nil {
		return x.FeatureVector
	}
	return nil
}

type RpcFeatureVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Feature  []float32                 `protobuf:"fixed32,2,rep,packed,name=feature,proto3" json:"feature,omitempty"`
	DataType RpcFeatureVector_DataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=warning.v1.RpcFeatureVector_DataType" json:"data_type,omitempty"`
	Data     []byte                    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RpcFeatureVector) Reset() {
	*x = RpcFeatureVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_v1_warning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcFeatureVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFeatureVector) ProtoMessage() {}

func (x *RpcFeatureVector) ProtoReflect() protoreflect.Message {
	mi := &file_warning_v1_warning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFeatureVector.ProtoReflect.Descriptor instead.
func (*RpcFeatureVector) Descriptor() ([]byte, []int) {
	return file_warning_v1_warning_proto_rawDescGZIP(), []int{3}
}

func (x *RpcFeatureVector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RpcFeatureVector) GetFeature() []float32 {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *RpcFeatureVector) GetDataType() RpcFeatureVector_DataType {
	if x != nil {
		return x.DataType
	}
	return RpcFeatureVector_UNKNOWN
}

func (x *RpcFeatureVector) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RpcAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // key of the attribute, e.g. "type", "color", "hat"
	Value    string  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // value of the key, e.g. "SUV", "no", "yes"
	AttrConf float32 `protobuf:"fixed32,3,opt,name=attr_conf,json=attrConf,proto3" json:"attr_conf,omitempty"`
}

func (x *RpcAttribute) Reset() {
	*x = RpcAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_v1_warning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAttribute) ProtoMessage() {}

func (x *RpcAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_warning_v1_warning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAttribute.ProtoReflect.Descriptor instead.
func (*RpcAttribute) Descriptor() ([]byte, []int) {
	return file_warning_v1_warning_proto_rawDescGZIP(), []int{4}
}

func (x *RpcAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RpcAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RpcAttribute) GetAttrConf() float32 {
	if x != nil {
		return x.AttrConf
	}
	return 0
}

type RpcRectangle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`           // width scale between 0~1 in a frame
	Y      float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`           // height scale between 0~1 in a frame
	Width  float32 `protobuf:"fixed32,3,opt,name=width,proto3" json:"width,omitempty"`   // width scale between 0~1 in a frame
	Height float32 `protobuf:"fixed32,4,opt,name=height,proto3" json:"height,omitempty"` // height scale between 0~1 in a frame
}

func (x *RpcRectangle) Reset() {
	*x = RpcRectangle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_v1_warning_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcRectangle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRectangle) ProtoMessage() {}

func (x *RpcRectangle) ProtoReflect() protoreflect.Message {
	mi := &file_warning_v1_warning_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRectangle.ProtoReflect.Descriptor instead.
func (*RpcRectangle) Descriptor() ([]byte, []int) {
	return file_warning_v1_warning_proto_rawDescGZIP(), []int{5}
}

func (x *RpcRectangle) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *RpcRectangle) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *RpcRectangle) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *RpcRectangle) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warning_v1_warning_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_warning_v1_warning_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_warning_v1_warning_proto_rawDescGZIP(), []int{6}
}

func (x *Response) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_warning_v1_warning_proto protoreflect.FileDescriptor

var file_warning_v1_warning_proto_rawDesc = []byte{
	0x0a, 0x18, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xde, 0x03, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x70, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b,
	0x61, 0x6c, 0x67, 0x6f, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6c, 0x67, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0a, 0x61, 0x6c, 0x67, 0x6f,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x72, 0x6c, 0x22, 0x46, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x6f, 0x78,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x62, 0x6f, 0x78, 0x22, 0xe8, 0x02, 0x0a, 0x09,
	0x72, 0x70, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x52,
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x6f, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x12, 0x43, 0x0a, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xe0, 0x01, 0x0a, 0x10, 0x72, 0x70, 0x63, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02,
	0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x70, 0x63, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x46, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e,
	0x54, 0x38, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x32, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10, 0x04, 0x22, 0x55, 0x0a, 0x0c, 0x72, 0x70, 0x63,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x22, 0x58, 0x0a, 0x0c, 0x72, 0x70, 0x63, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x38, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0x42, 0x0a, 0x0a, 0x53, 0x61, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x11, 0x2e,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x1a, 0x14, 0x2e, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x63, 0x64, 0x6e, 0x2e, 0x63, 0x6e, 0x2f, 0x69,
	0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_warning_v1_warning_proto_rawDescOnce sync.Once
	file_warning_v1_warning_proto_rawDescData = file_warning_v1_warning_proto_rawDesc
)

func file_warning_v1_warning_proto_rawDescGZIP() []byte {
	file_warning_v1_warning_proto_rawDescOnce.Do(func() {
		file_warning_v1_warning_proto_rawDescData = protoimpl.X.CompressGZIP(file_warning_v1_warning_proto_rawDescData)
	})
	return file_warning_v1_warning_proto_rawDescData
}

var file_warning_v1_warning_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_warning_v1_warning_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_warning_v1_warning_proto_goTypes = []interface{}{
	(RpcFeatureVector_DataType)(0), // 0: warning.v1.rpcFeatureVector.DataType
	(*Frame)(nil),                  // 1: warning.v1.Frame
	(*Object)(nil),                 // 2: warning.v1.Object
	(*RpcObject)(nil),              // 3: warning.v1.rpcObject
	(*RpcFeatureVector)(nil),       // 4: warning.v1.rpcFeatureVector
	(*RpcAttribute)(nil),           // 5: warning.v1.rpcAttribute
	(*RpcRectangle)(nil),           // 6: warning.v1.rpcRectangle
	(*Response)(nil),               // 7: warning.v1.Response
	(*v1.AlgoOutput)(nil),          // 8: standard.v1.AlgoOutput
}
var file_warning_v1_warning_proto_depIdxs = []int32{
	2, // 0: warning.v1.Frame.object:type_name -> warning.v1.Object
	3, // 1: warning.v1.Frame.stream_object:type_name -> warning.v1.rpcObject
	5, // 2: warning.v1.Frame.extra_data:type_name -> warning.v1.rpcAttribute
	8, // 3: warning.v1.Frame.algo_output:type_name -> standard.v1.AlgoOutput
	6, // 4: warning.v1.rpcObject.object_box:type_name -> warning.v1.rpcRectangle
	5, // 5: warning.v1.rpcObject.attribute:type_name -> warning.v1.rpcAttribute
	4, // 6: warning.v1.rpcObject.feature_vector:type_name -> warning.v1.rpcFeatureVector
	0, // 7: warning.v1.rpcFeatureVector.data_type:type_name -> warning.v1.rpcFeatureVector.DataType
	1, // 8: warning.v1.SacService.SendMsg:input_type -> warning.v1.Frame
	7, // 9: warning.v1.SacService.SendMsg:output_type -> warning.v1.Response
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_warning_v1_warning_proto_init() }
func file_warning_v1_warning_proto_init() {
	if File_warning_v1_warning_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_warning_v1_warning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warning_v1_warning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warning_v1_warning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warning_v1_warning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcFeatureVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warning_v1_warning_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warning_v1_warning_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcRectangle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warning_v1_warning_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warning_v1_warning_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_warning_v1_warning_proto_goTypes,
		DependencyIndexes: file_warning_v1_warning_proto_depIdxs,
		EnumInfos:         file_warning_v1_warning_proto_enumTypes,
		MessageInfos:      file_warning_v1_warning_proto_msgTypes,
	}.Build()
	File_warning_v1_warning_proto = out.File
	file_warning_v1_warning_proto_rawDesc = nil
	file_warning_v1_warning_proto_goTypes = nil
	file_warning_v1_warning_proto_depIdxs = nil
}
