// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.9
// source: deep_stream/v1/deep_stream.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeatureVector_DataType int32

const (
	FeatureVector_UNKNOWN FeatureVector_DataType = 0
	FeatureVector_INT8    FeatureVector_DataType = 1
	FeatureVector_INT16   FeatureVector_DataType = 2
	FeatureVector_FLOAT32 FeatureVector_DataType = 3
	FeatureVector_FLOAT64 FeatureVector_DataType = 4
)

// Enum value maps for FeatureVector_DataType.
var (
	FeatureVector_DataType_name = map[int32]string{
		0: "UNKNOWN",
		1: "INT8",
		2: "INT16",
		3: "FLOAT32",
		4: "FLOAT64",
	}
	FeatureVector_DataType_value = map[string]int32{
		"UNKNOWN": 0,
		"INT8":    1,
		"INT16":   2,
		"FLOAT32": 3,
		"FLOAT64": 4,
	}
)

func (x FeatureVector_DataType) Enum() *FeatureVector_DataType {
	p := new(FeatureVector_DataType)
	*p = x
	return p
}

func (x FeatureVector_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureVector_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_deep_stream_v1_deep_stream_proto_enumTypes[0].Descriptor()
}

func (FeatureVector_DataType) Type() protoreflect.EnumType {
	return &file_deep_stream_v1_deep_stream_proto_enumTypes[0]
}

func (x FeatureVector_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureVector_DataType.Descriptor instead.
func (FeatureVector_DataType) EnumDescriptor() ([]byte, []int) {
	return file_deep_stream_v1_deep_stream_proto_rawDescGZIP(), []int{2, 0}
}

type Rectangle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`           // width scale between 0~1 in a frame
	Y      float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`           // height scale between 0~1 in a frame
	Width  float32 `protobuf:"fixed32,3,opt,name=width,proto3" json:"width,omitempty"`   // width scale between 0~1 in a frame
	Height float32 `protobuf:"fixed32,4,opt,name=height,proto3" json:"height,omitempty"` // height scale between 0~1 in a frame
}

func (x *Rectangle) Reset() {
	*x = Rectangle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rectangle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rectangle) ProtoMessage() {}

func (x *Rectangle) ProtoReflect() protoreflect.Message {
	mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rectangle.ProtoReflect.Descriptor instead.
func (*Rectangle) Descriptor() ([]byte, []int) {
	return file_deep_stream_v1_deep_stream_proto_rawDescGZIP(), []int{0}
}

func (x *Rectangle) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Rectangle) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Rectangle) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Rectangle) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // key of the attribute, e.g. "type", "color", "hat"
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // value of the key, e.g. "SUV", "no", "yes"
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_deep_stream_v1_deep_stream_proto_rawDescGZIP(), []int{1}
}

func (x *Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FeatureVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Feature  []float32              `protobuf:"fixed32,2,rep,packed,name=feature,proto3" json:"feature,omitempty"`
	DataType FeatureVector_DataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=deep_stream.v1.FeatureVector_DataType" json:"data_type,omitempty"`
	Data     []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FeatureVector) Reset() {
	*x = FeatureVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureVector) ProtoMessage() {}

func (x *FeatureVector) ProtoReflect() protoreflect.Message {
	mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureVector.ProtoReflect.Descriptor instead.
func (*FeatureVector) Descriptor() ([]byte, []int) {
	return file_deep_stream_v1_deep_stream_proto_rawDescGZIP(), []int{2}
}

func (x *FeatureVector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeatureVector) GetFeature() []float32 {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *FeatureVector) GetDataType() FeatureVector_DataType {
	if x != nil {
		return x.DataType
	}
	return FeatureVector_UNKNOWN
}

func (x *FeatureVector) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId      uint32           `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	TrackingId    uint32           `protobuf:"varint,2,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	ObjectLabel   string           `protobuf:"bytes,3,opt,name=object_label,json=objectLabel,proto3" json:"object_label,omitempty"`       // Person, Vehicle, Face
	ObjectBox     *Rectangle       `protobuf:"bytes,4,opt,name=object_box,json=objectBox,proto3" json:"object_box,omitempty"`             // Box of object
	DetectConf    float32          `protobuf:"fixed32,5,opt,name=detect_conf,json=detectConf,proto3" json:"detect_conf,omitempty"`        // Confidence of detection
	TrackingConf  float32          `protobuf:"fixed32,6,opt,name=tracking_conf,json=trackingConf,proto3" json:"tracking_conf,omitempty"`  // Confidence of tracking
	Attribute     []*Attribute     `protobuf:"bytes,7,rep,name=attribute,proto3" json:"attribute,omitempty"`                              // Multiple sets of attribute of object
	FeatureVector []*FeatureVector `protobuf:"bytes,8,rep,name=feature_vector,json=featureVector,proto3" json:"feature_vector,omitempty"` // feature vector for face recognition
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_deep_stream_v1_deep_stream_proto_rawDescGZIP(), []int{3}
}

func (x *Object) GetObjectId() uint32 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *Object) GetTrackingId() uint32 {
	if x != nil {
		return x.TrackingId
	}
	return 0
}

func (x *Object) GetObjectLabel() string {
	if x != nil {
		return x.ObjectLabel
	}
	return ""
}

func (x *Object) GetObjectBox() *Rectangle {
	if x != nil {
		return x.ObjectBox
	}
	return nil
}

func (x *Object) GetDetectConf() float32 {
	if x != nil {
		return x.DetectConf
	}
	return 0
}

func (x *Object) GetTrackingConf() float32 {
	if x != nil {
		return x.TrackingConf
	}
	return 0
}

func (x *Object) GetAttribute() []*Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Object) GetFeatureVector() []*FeatureVector {
	if x != nil {
		return x.FeatureVector
	}
	return nil
}

// [Frame] defines basic information of frame and objects in the frame.
type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameraId  string    `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	Timestamp uint64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Defines the current timestamp
	Object    []*Object `protobuf:"bytes,3,rep,name=object,proto3" json:"object,omitempty"`        // All objects info in the frame
	ImagePath string    `protobuf:"bytes,4,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
	JobId     string    `protobuf:"bytes,5,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`             // Defines unique job
	ModelType string    `protobuf:"bytes,6,opt,name=model_type,json=modelType,proto3" json:"model_type,omitempty"` // Defines model type
	NumObj    uint32    `protobuf:"varint,7,opt,name=num_obj,json=numObj,proto3" json:"num_obj,omitempty"`         // Defines object number
	VideoName string    `protobuf:"bytes,8,opt,name=video_name,json=videoName,proto3" json:"video_name,omitempty"` // Defines smart_record video name
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_deep_stream_v1_deep_stream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_deep_stream_v1_deep_stream_proto_rawDescGZIP(), []int{4}
}

func (x *Frame) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

func (x *Frame) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Frame) GetObject() []*Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *Frame) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *Frame) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Frame) GetModelType() string {
	if x != nil {
		return x.ModelType
	}
	return ""
}

func (x *Frame) GetNumObj() uint32 {
	if x != nil {
		return x.NumObj
	}
	return 0
}

func (x *Frame) GetVideoName() string {
	if x != nil {
		return x.VideoName
	}
	return ""
}

var File_deep_stream_v1_deep_stream_proto protoreflect.FileDescriptor

var file_deep_stream_v1_deep_stream_proto_rawDesc = []byte{
	0x0a, 0x20, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x22, 0x55, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12,
	0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x35, 0x0a, 0x09, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xde, 0x01, 0x0a, 0x0d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x43, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54,
	0x33, 0x32, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10,
	0x04, 0x22, 0xe8, 0x02, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x38, 0x0a,
	0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x6f, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x37, 0x0a,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0d, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xff, 0x01, 0x0a,
	0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x62,
	0x6a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x4f, 0x62, 0x6a, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x34,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x74, 0x79, 0x75, 0x6e, 0x63, 0x64,
	0x6e, 0x2e, 0x63, 0x6e, 0x2f, 0x69, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deep_stream_v1_deep_stream_proto_rawDescOnce sync.Once
	file_deep_stream_v1_deep_stream_proto_rawDescData = file_deep_stream_v1_deep_stream_proto_rawDesc
)

func file_deep_stream_v1_deep_stream_proto_rawDescGZIP() []byte {
	file_deep_stream_v1_deep_stream_proto_rawDescOnce.Do(func() {
		file_deep_stream_v1_deep_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_deep_stream_v1_deep_stream_proto_rawDescData)
	})
	return file_deep_stream_v1_deep_stream_proto_rawDescData
}

var file_deep_stream_v1_deep_stream_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_deep_stream_v1_deep_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_deep_stream_v1_deep_stream_proto_goTypes = []interface{}{
	(FeatureVector_DataType)(0), // 0: deep_stream.v1.FeatureVector.DataType
	(*Rectangle)(nil),           // 1: deep_stream.v1.Rectangle
	(*Attribute)(nil),           // 2: deep_stream.v1.Attribute
	(*FeatureVector)(nil),       // 3: deep_stream.v1.FeatureVector
	(*Object)(nil),              // 4: deep_stream.v1.Object
	(*Frame)(nil),               // 5: deep_stream.v1.Frame
}
var file_deep_stream_v1_deep_stream_proto_depIdxs = []int32{
	0, // 0: deep_stream.v1.FeatureVector.data_type:type_name -> deep_stream.v1.FeatureVector.DataType
	1, // 1: deep_stream.v1.Object.object_box:type_name -> deep_stream.v1.Rectangle
	2, // 2: deep_stream.v1.Object.attribute:type_name -> deep_stream.v1.Attribute
	3, // 3: deep_stream.v1.Object.feature_vector:type_name -> deep_stream.v1.FeatureVector
	4, // 4: deep_stream.v1.Frame.object:type_name -> deep_stream.v1.Object
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_deep_stream_v1_deep_stream_proto_init() }
func file_deep_stream_v1_deep_stream_proto_init() {
	if File_deep_stream_v1_deep_stream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deep_stream_v1_deep_stream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rectangle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_stream_v1_deep_stream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_stream_v1_deep_stream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_stream_v1_deep_stream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_stream_v1_deep_stream_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deep_stream_v1_deep_stream_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_deep_stream_v1_deep_stream_proto_goTypes,
		DependencyIndexes: file_deep_stream_v1_deep_stream_proto_depIdxs,
		EnumInfos:         file_deep_stream_v1_deep_stream_proto_enumTypes,
		MessageInfos:      file_deep_stream_v1_deep_stream_proto_msgTypes,
	}.Build()
	File_deep_stream_v1_deep_stream_proto = out.File
	file_deep_stream_v1_deep_stream_proto_rawDesc = nil
	file_deep_stream_v1_deep_stream_proto_goTypes = nil
	file_deep_stream_v1_deep_stream_proto_depIdxs = nil
}
